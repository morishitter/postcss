{
    "type": "root",
    "nodes": [
        {
            "type": "rule",
            "nodes": [
                {
                    "type": "decl",
                    "source": {
                        "start": {
                            "line": 2,
                            "column": 5
                        },
                        "input": {
                            "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                            "safe": false,
                            "file": "/escape.css",
                            "from": "/escape.css"
                        },
                        "end": {
                            "line": 2,
                            "column": 30
                        }
                    },
                    "before": "\n    ",
                    "prop": "background",
                    "between": ": ",
                    "value": "url(\"a).png\")"
                },
                {
                    "type": "decl",
                    "source": {
                        "start": {
                            "line": 3,
                            "column": 5
                        },
                        "input": {
                            "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                            "safe": false,
                            "file": "/escape.css",
                            "from": "/escape.css"
                        },
                        "end": {
                            "line": 3,
                            "column": 25
                        }
                    },
                    "before": "\n    ",
                    "prop": "background",
                    "between": ": ",
                    "value": "url(a;a)"
                },
                {
                    "type": "decl",
                    "source": {
                        "start": {
                            "line": 4,
                            "column": 5
                        },
                        "input": {
                            "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                            "safe": false,
                            "file": "/escape.css",
                            "from": "/escape.css"
                        },
                        "end": {
                            "line": 4,
                            "column": 20
                        }
                    },
                    "before": "\n    ",
                    "prop": "background",
                    "between": ": ",
                    "value": "\\;a"
                }
            ],
            "source": {
                "start": {
                    "line": 1,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 5,
                    "column": 1
                }
            },
            "before": "",
            "between": " ",
            "selector": "a",
            "semicolon": true,
            "after": "\n"
        },
        {
            "type": "rule",
            "nodes": [],
            "source": {
                "start": {
                    "line": 7,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 7,
                    "column": 19
                }
            },
            "before": "\n\n",
            "between": " ",
            "selector": ":not([foo=\")\"])",
            "after": " "
        },
        {
            "type": "rule",
            "nodes": [],
            "source": {
                "start": {
                    "line": 8,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 8,
                    "column": 18
                }
            },
            "before": "\n",
            "between": " ",
            "_selector": {
                "value": ":not(div)",
                "raw": ":not(div/*)*/)"
            },
            "selector": ":not(div)",
            "after": " "
        },
        {
            "type": "rule",
            "nodes": [],
            "source": {
                "start": {
                    "line": 9,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 9,
                    "column": 37
                }
            },
            "before": "\n",
            "between": " ",
            "selector": ":not(:nth-child(2n of [foo=\")\"]))",
            "after": " "
        },
        {
            "type": "rule",
            "nodes": [],
            "source": {
                "start": {
                    "line": 10,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 10,
                    "column": 12
                }
            },
            "before": "\n",
            "between": " ",
            "selector": "[foo=\\\"]",
            "after": " "
        },
        {
            "type": "rule",
            "nodes": [],
            "source": {
                "start": {
                    "line": 11,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 11,
                    "column": 12
                }
            },
            "before": "\n",
            "between": " ",
            "selector": "[foo=\\{]",
            "after": " "
        },
        {
            "type": "rule",
            "nodes": [],
            "source": {
                "start": {
                    "line": 12,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 12,
                    "column": 12
                }
            },
            "before": "\n",
            "between": " ",
            "selector": "[foo=\\(]",
            "after": " "
        },
        {
            "type": "rule",
            "nodes": [],
            "source": {
                "start": {
                    "line": 13,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 13,
                    "column": 30
                }
            },
            "before": "\n",
            "between": " ",
            "selector": "[foo=yes\\:\\(it\\'s\\ work\\)]",
            "after": " "
        },
        {
            "type": "rule",
            "nodes": [],
            "source": {
                "start": {
                    "line": 15,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 15,
                    "column": 10
                }
            },
            "before": "\n\n",
            "between": " ",
            "selector": "\\@noat",
            "after": " "
        },
        {
            "type": "rule",
            "nodes": [
                {
                    "type": "decl",
                    "source": {
                        "start": {
                            "line": 18,
                            "column": 5
                        },
                        "input": {
                            "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                            "safe": false,
                            "file": "/escape.css",
                            "from": "/escape.css"
                        },
                        "end": {
                            "line": 18,
                            "column": 14
                        }
                    },
                    "before": "\n    ",
                    "prop": "color",
                    "between": ": ",
                    "value": "\\\\"
                }
            ],
            "source": {
                "start": {
                    "line": 17,
                    "column": 1
                },
                "input": {
                    "css": "a {\n    background: url(\"a).png\");\n    background: url(a;a);\n    background: \\;a;\n}\n\n:not([foo=\")\"]) { }\n:not(div/*)*/) { }\n:not(:nth-child(2n of [foo=\")\"])) { }\n[foo=\\\"] { }\n[foo=\\{] { }\n[foo=\\(] { }\n[foo=yes\\:\\(it\\'s\\ work\\)] { }\n\n\\@noat { }\n\nh1\\\\{\n    color: \\\\;\n}\n",
                    "safe": false,
                    "file": "/escape.css",
                    "from": "/escape.css"
                },
                "end": {
                    "line": 19,
                    "column": 1
                }
            },
            "before": "\n\n",
            "between": "",
            "selector": "h1\\\\",
            "semicolon": true,
            "after": "\n"
        }
    ],
    "after": "\n"
}
